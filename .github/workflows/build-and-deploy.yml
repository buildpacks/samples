name: Build and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  repository_dispatch:
    types:
      - pack-release

jobs:
  build-deploy-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Determine download URL for latest pack
        id: pack-download-url
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          result-encoding: string
          script: |
            return github.rest.repos.getLatestRelease({
                owner: "buildpacks",
                repo: "pack"
            }).then(result => {
                return result.data.assets
                  .filter(a => a.name.includes("-linux.tgz"))
                  .map(a => a.browser_download_url)[0];
            })
      - name: Install pack
        run: |
          curl -s -L -o pack.tgz ${{ steps.pack-download-url.outputs.result }}
          tar -xvf pack.tgz
      - name: Set config needed for image extensions
        run: |
          ./pack config experimental true
          ./pack config pull-policy always
      - name: Build
        run: PACK_CMD=./pack make build-linux
      - uses: azure/docker-login@v1
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          username: cnbs
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Deploy
        if: ${{ github.ref == 'refs/heads/main' }}
        run: make deploy-linux
      - name: Clean up
        run: make clean-linux
